// 세팅 참고 URL : https://velog.io/@soyeon207/QueryDSL-Spring-Boot-%EC%97%90%EC%84%9C-QueryDSL-JPA-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0
// spring boot 3 이상 설정 : https://velog.io/@juhyeon1114/Spring-QueryDsl-gradle-%EC%84%A4%EC%A0%95-Spring-boot-3.0-%EC%9D%B4%EC%83%81
dependencies {
    // QueryDSL 사용을 위한 라이브러리 (QuerydslRepositorySupport, QuerydslPredicateExecutor 등 QueryDSL 내부 클래스는 사용 가능하지만, 실제로 쿼리를 위해 사용되는 QClass 는 생성되지 않는다)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-apt' // Q 클래스 생성을 위한 라이브러리

    /**
     * Q 클래스 생성 방법
     *
     * 1. com.ewerk.gradle.plugins.querydsl
     * - 2018년 이후 업데이트 된 적이 없다.
     * - gradle 버전이 계속적으로 업데이트 되면서 해당 플러그인 외 여러 가지 설정 해줘야 할 것 들이 많다.
     *
     * 2. annotationProcessor
     * - ewerk 관련 단점들 때문에 두번째 방식인 annotationProcessor 를 사용
     */
    // @Entity 어노테이션 탐색 및 Q 클래스 생성
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    // java.lang.NoClassDefFoundError (jakarta.annotation.Entity / jakarta.annotation.Generated) 에러 발생 대응을 위한 코드
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

// gradle build 시 QClass 소스도 함께 build 하기 위해서 sourceSets 에 해당 위치를 추가
def querydslSrcDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDirs += [querydslSrcDir]
        }
    }
}

// 해당 소스를 명시하지 않으면 Default 로 Q 파일 내 Generated 를 import 할 때 자바 9 에만 있는 import javax.annotation.processing.Generated 로 import
// jakarta.annotation.Generated 로 import 하도록 설정
compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=jakarta.annotation.Generated'
}

// annotationProcessorGeneratedSourcesDirectory 를 사용할 수도 있는데,
// Gradle 공식 문서에 해당 기능은 deprecated 되었고, 추후 major version 에선 삭제할 것 이라고 소개 하고 있기 때문에 generatedSourceOutputDirectory 를 사용
// generatedSourceOutputDirectory 는 annotation processors 에서 생성한 소스 파일을 저장할 디렉토리를 지정 해준다.
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
    // clean 실행 시 생성된 QClass 삭제
    delete file(querydslSrcDir)
}